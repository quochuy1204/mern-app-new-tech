{"version":3,"sources":["components/header/Header.js","components/utils/notification/Notification.js","redux/actions/index.js","redux/actions/authAction.js","components/body/auth/Login.js","components/utils/validation/Validation.js","components/body/auth/Register.js","components/body/auth/ActivationEmail.js","components/utils/NotFound/NotFound.js","components/body/auth/ForgotPassword.js","components/body/auth/ResetPassword.js","redux/actions/usersAction.js","components/body/profile/Profile.js","components/body/profile/EditUser.js","components/body/home/Home.js","components/body/Body.js","App.js","reportWebVitals.js","redux/reducers/authReducer.js","redux/reducers/tokenReducer.js","redux/reducers/usersReducer.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["Header","auth","useSelector","state","user","isLogged","handleLogout","a","axios","get","localStorage","removeItem","window","location","href","transForm","transform","className","to","style","src","avatar","alt","name","onClick","showErrMsg","msg","showSuccessMsg","ACTIONS","LOGIN","GET_TOKEN","GET_USER","GET_ALL_USERS","dispatchLogin","type","fetchUser","token","headers","Authorization","res","initialState","email","password","err","success","Login","useState","setUser","dispatch","useDispatch","history","useHistory","handleChangeInput","e","target","value","handleSubmit","preventDefault","post","data","setItem","push","response","responseGoogle","tokenId","error","responseFacebook","accessToken","userID","onSubmit","htmlFor","placeholder","id","onChange","clientId","buttonText","onSuccess","cookiePolicy","appId","autoLoad","fields","callback","isEmpty","isEmail","test","isLength","length","isMatch","cf_password","Register","ActivationEmail","activation_token","useParams","setErr","setSuccess","useEffect","console","log","activationEmail","NotFound","ForgotPassword","setData","forgotPassword","ResetPassword","handleResetPass","fetchAllUsers","Profile","users","isAdmin","setAvatar","loading","setLoading","setCallback","then","payload","dispatchGetAllUsers","handleChange","changeAvatar","file","files","size","formData","FormData","append","url","handleDelete","_id","confirm","delete","defaultValue","disabled","color","patch","updateInfor","updatePassword","overflowX","map","role","title","EditUser","editUser","setEditUser","checkAdmin","setCheckAdmin","num","setNum","forEach","handleUpdate","goBack","checked","Home","rel","Body","path","component","exact","App","getItem","access_Token","getToken","dispatchGetUser","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","authReducer","action","tokenReducer","usersReducer","combineReducers","store","createStore","rootReducer","__REDUX_DEVTOOLS_EXTENSION__","DataProvider","children","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.36188d32.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { useSelector } from 'react-redux'\r\nimport axios from 'axios'\r\n\r\n\r\nfunction Header() {\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    const { user, isLogged } = auth\r\n\r\n\r\n    const handleLogout = async () => {\r\n        try {\r\n            await axios.get('/users/logout')\r\n            localStorage.removeItem('firstLogin')\r\n            window.location.href = \"/\";\r\n        } catch (err) {\r\n            window.location.href = \"/\";\r\n        }\r\n    }\r\n\r\n    const userLink = () => {\r\n        return <li className=\"drop-nav\">\r\n            <Link to=\"#\" className=\"avatar\">\r\n                <img src={user.avatar} alt=\"\" /> {user.name} <i className=\"fas fa-angle-down\"></i>\r\n            </Link>\r\n            <ul className=\"dropdown\">\r\n                <li><Link to=\"/profile\">Profile</Link></li>\r\n                <li><Link to=\"/\" onClick={handleLogout}>Logout</Link></li>\r\n            </ul>\r\n        </li>\r\n    }\r\n\r\n    const transForm = {\r\n        transform: isLogged ? \"translateY(-5px)\" : 0\r\n    }\r\n\r\n    return (\r\n        <header>\r\n            <div className=\"logo\">\r\n                <h1><Link to=\"/\">Logo</Link></h1>\r\n            </div>\r\n\r\n            <ul style={transForm}>\r\n                {\r\n                    isLogged\r\n                        ? userLink()\r\n                        : <li><Link to=\"/login\"><i className=\"fas fa-user\"></i> Sign in</Link></li>\r\n                }\r\n\r\n            </ul>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header\r\n","import React from 'react'\r\nimport './notification.css'\r\n\r\nexport const showErrMsg = (msg) => {\r\n    return <div className=\"errMsg\">{msg}</div>\r\n}\r\n\r\nexport const showSuccessMsg = (msg) => {\r\n    return <div className=\"successMsg\">{msg}</div>\r\n}","const ACTIONS = {\r\n    LOGIN: 'LOGIN',\r\n    GET_TOKEN: 'GET_TOKEN',\r\n    GET_USER: 'GET_USER',\r\n    GET_ALL_USERS: 'GET_ALL_USERS'\r\n}\r\n\r\nexport default ACTIONS","import ACTIONS from './index'\r\nimport axios from 'axios'\r\n\r\nexport const dispatchLogin = () => {\r\n    return {\r\n        type: ACTIONS.LOGIN\r\n    }\r\n}\r\n\r\nexport const fetchUser = async (token) => {\r\n    const res = await axios.get('/users/infor', {\r\n        headers: { Authorization: token }\r\n    })\r\n    return res\r\n}\r\n\r\nexport const dispatchGetUser = (res) => {\r\n    return {\r\n        type: ACTIONS.GET_USER,\r\n        payload: {\r\n            user: res.data,\r\n            isAdmin: res.data.role === 1 ? true : false\r\n        }\r\n    }\r\n}","import React, { useState } from 'react'\r\nimport { Link, useHistory } from 'react-router-dom'\r\nimport axios from 'axios'\r\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification'\r\nimport { dispatchLogin } from '../../../redux/actions/authAction'\r\nimport { useDispatch } from 'react-redux'\r\nimport { GoogleLogin } from 'react-google-login';\r\nimport FacebookLogin from 'react-facebook-login';\r\n\r\n\r\nconst initialState = {\r\n    email: '',\r\n    password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction Login() {\r\n    const [user, setUser] = useState(initialState)\r\n    const dispatch = useDispatch()\r\n    const history = useHistory()\r\n\r\n    const { email, password, err, success } = user\r\n\r\n    const handleChangeInput = e => {\r\n        const { name, value } = e.target\r\n        setUser({ ...user, [name]: value, err: '', success: '' })\r\n    }\r\n\r\n\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n        try {\r\n            const res = await axios.post('/users/login', { email, password })\r\n            setUser({ ...user, err: '', success: res.data.msg })\r\n\r\n            localStorage.setItem('firstLogin', true)\r\n\r\n            dispatch(dispatchLogin())\r\n            history.push(\"/\")\r\n\r\n        } catch (err) {\r\n            err.response.data.msg &&\r\n                setUser({ ...user, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    const responseGoogle = async (response) => {\r\n        try {\r\n            const res = await axios.post('/users/google_login', { tokenId: response.tokenId })\r\n\r\n            setUser({ ...user, error: '', success: res.data.msg })\r\n            localStorage.setItem('firstLogin', true)\r\n\r\n            dispatch(dispatchLogin())\r\n            history.push('/')\r\n        } catch (err) {\r\n            err.response.data.msg &&\r\n                setUser({ ...user, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    const responseFacebook = async (response) => {\r\n        try {\r\n            const { accessToken, userID } = response\r\n            const res = await axios.post('/users/facebook_login', { accessToken, userID })\r\n\r\n            setUser({ ...user, error: '', success: res.data.msg })\r\n            localStorage.setItem('firstLogin', true)\r\n\r\n            dispatch(dispatchLogin())\r\n            history.push('/')\r\n        } catch (err) {\r\n            err.response.data.msg &&\r\n                setUser({ ...user, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login_page\">\r\n            <h2>Login</h2>\r\n            {err && showErrMsg(err)}\r\n            {success && showSuccessMsg(success)}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"email\">Email Address</label>\r\n                    <input type=\"text\" placeholder=\"Enter email address\" id=\"email\"\r\n                        value={email} name=\"email\" onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" placeholder=\"Enter password\" id=\"password\"\r\n                        value={password} name=\"password\" onChange={handleChangeInput} />\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <button type=\"submit\">Login</button>\r\n                    <Link to=\"/forgot_password\">Forgot your password?</Link>\r\n                </div>\r\n            </form>\r\n\r\n            <div className=\"hr\">Or Login With</div>\r\n\r\n            <div className=\"social\">\r\n                <GoogleLogin\r\n                    clientId=\"720561311023-ngl368f9dc8q09eomupnfh51ck7kg3nr.apps.googleusercontent.com\"\r\n                    buttonText=\"Login with google\"\r\n                    onSuccess={responseGoogle}\r\n                    cookiePolicy={'single_host_origin'}\r\n                />\r\n\r\n                <FacebookLogin\r\n                    appId=\"747793779163376\"\r\n                    autoLoad={false}\r\n                    fields=\"name,email,picture\"\r\n                    callback={responseFacebook}\r\n                />\r\n\r\n            </div>\r\n\r\n            <p>New Customer? <Link to=\"/register\">Register</Link></p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Login\r\n","export const isEmpty = value => {\r\n    if (!value) return true\r\n    return false\r\n}\r\n\r\nexport const isEmail = email => {\r\n    // eslint-disable-next-line\r\n    const re = /^(([^<>()[\\]\\\\.,;:\\s@\\\"]+(\\.[^<>()[\\]\\\\.,;:\\s@\\\"]+)*)|(\\\".+\\\"))@((\\[[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\.[0-9]{1,3}\\])|(([a-zA-Z\\-0-9]+\\.)+[a-zA-Z]{2,}))$/;\r\n    return re.test(email);\r\n}\r\n\r\nexport const isLength = password => {\r\n    if (password.length < 8) return true\r\n    return false\r\n}\r\n\r\nexport const isMatch = (password, cf_password) => {\r\n    if (password === cf_password) return true\r\n    return false\r\n}","import { React, useState } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { isEmail, isEmpty, isLength, isMatch } from '../../utils/validation/Validation'\r\nimport axios from 'axios'\r\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification'\r\n\r\n//initialState\r\nconst initialState = {\r\n    name: '',\r\n    email: '',\r\n    password: '',\r\n    cf_password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction Register() {\r\n    //assign state and setState \r\n    const [user, setUser] = useState(initialState)\r\n\r\n    //assign value name for user state\r\n    const { name, email, password, cf_password, err, success } = user\r\n\r\n    //function to handle change \r\n    const handleChangeInput = e => {\r\n        const { name, value } = e.target\r\n        setUser({ ...user, [name]: value, err: '', success: '' })\r\n    }\r\n\r\n    //function to handle submition\r\n    const handleSubmit = async e => {\r\n        e.preventDefault()\r\n\r\n        //check name and password filled or not \r\n        if (isEmpty(name) || isEmpty(password)) {\r\n            return setUser({ ...user, err: \"Please fill in all fields.\", success: '' })\r\n        }\r\n\r\n        //check email valid or not \r\n        if (!isEmail(email)) {\r\n            return setUser({ ...user, err: \"Invalid email address.\", success: '' })\r\n        }\r\n\r\n        //check password length\r\n        if (isLength(password)) {\r\n            return setUser({ ...user, err: \"Password must be at least 8 characters.\", success: '' })\r\n        }\r\n\r\n        //check password matching with cf_password or not \r\n        if (!isMatch(password, cf_password)) {\r\n            return setUser({ ...user, err: \"Password do not match.\", success: '' })\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/users/register', {\r\n                name, email, password\r\n            })\r\n\r\n            setUser({ ...user, err: '', success: res.data.msg })\r\n        } catch (err) {\r\n            err.response.data.msg && setUser({ ...user, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"login_page\">\r\n            <h2>Register</h2>\r\n\r\n            {err && showErrMsg(err)}\r\n            {success && showSuccessMsg(success)}\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <div>\r\n                    <label htmlFor=\"name\">Name</label>\r\n                    <input type=\"text\" placeholder=\"Enter your name\" id=\"name\" value={name} name=\"name\" onChange={handleChangeInput}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"email\">Email address</label>\r\n                    <input type=\"text\" placeholder=\"Enter your email address\" id=\"email\" value={email} name=\"email\" onChange={handleChangeInput}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"password\">Password</label>\r\n                    <input type=\"password\" placeholder=\"Enter your password\" id=\"password\" value={password} name=\"password\" onChange={handleChangeInput}></input>\r\n                </div>\r\n\r\n                <div>\r\n                    <label htmlFor=\"cf_password\">Confirm password</label>\r\n                    <input type=\"password\" placeholder=\"Confirm your password\" id=\"cf_password\" value={cf_password} name=\"cf_password\" onChange={handleChangeInput}></input>\r\n                </div>\r\n\r\n                <div className=\"row\">\r\n                    <button type=\"submit\">Register</button>\r\n                </div>\r\n            </form>\r\n            <p>Already have an account ? <Link to=\"/login\">Login</Link> </p>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Register\r\n\r\n","import React, { useState, useEffect } from 'react'\r\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification'\r\nimport { useParams } from 'react-router-dom'\r\nimport axios from 'axios'\r\n\r\nfunction ActivationEmail() {\r\n    //get activate_token from params with useParams method \r\n    const { activation_token } = useParams()\r\n\r\n    //assign err and setErr\r\n    const [err, setErr] = useState('')\r\n\r\n    //assign success and setSuccess\r\n    const [success, setSuccess] = useState('')\r\n\r\n    //useEffect to auto update err and success state when activate_token change\r\n    useEffect(() => {\r\n        if (activation_token) {\r\n            const activationEmail = async () => {\r\n                try {\r\n                    const res = await axios.post('/users/activation', { activation_token })\r\n                    console.log(\"Test1\")\r\n                    setSuccess(res.data.msg)\r\n                } catch (err) {\r\n                    err.response.data.msg && setErr(err.response.data.msg)\r\n                }\r\n            }\r\n            activationEmail()\r\n        }\r\n    }, [activation_token])\r\n    return (\r\n        <div className=\"activa_page\">\r\n            {err && showErrMsg(err)}\r\n            {success && showSuccessMsg(success)}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ActivationEmail","import React from 'react'\r\n\r\nfunction NotFound() {\r\n    return (\r\n        <div>\r\n            404 | Not Found\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default NotFound","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { isEmail } from '../../utils/validation/Validation'\r\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification'\r\n\r\n//init state\r\nconst initialState = {\r\n    email: '',\r\n    err: '',\r\n    success: ''\r\n}\r\nfunction ForgotPassword() {\r\n    //set state and state\r\n    const [data, setData] = useState(initialState)\r\n\r\n    //assign email , err , success\r\n    const { email, err, success } = data\r\n\r\n    //function to handle change \r\n    const handleChangeInput = e => {\r\n        const { name, value } = e.target\r\n        setData({ ...data, [name]: value, err: '', success: '' })\r\n    }\r\n\r\n    //function to handle button on click\r\n    const forgotPassword = async () => {\r\n        if (!isEmail(email)) {\r\n            return setData({ ...data, err: \"Invalid email address.\", success: '' })\r\n        }\r\n\r\n        try {\r\n            const res = await axios.post('/users/forgot_password', { email })\r\n            return setData({ ...data, err: '', success: res.data.msg })\r\n        } catch (err) {\r\n            err.response.data.msg && setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"fg_pass\">\r\n            <h2>Forgot Your Password ?</h2>\r\n            <div className=\"row\">\r\n                {err && showErrMsg(err)}\r\n                {success && showSuccessMsg(success)}\r\n\r\n                <label htmlFor=\"email\">Enter your email address</label>\r\n                <input type=\"text\" name=\"email\" id=\"email\" value={email} onChange={handleChangeInput} />\r\n                <button onClick={forgotPassword}>Verify your email</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ForgotPassword","import React, { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useParams } from 'react-router-dom'\r\nimport { showErrMsg, showSuccessMsg } from '../../utils/notification/Notification'\r\nimport { isLength, isMatch } from '../../utils/validation/Validation'\r\n\r\n\r\nconst initialState = {\r\n    password: '',\r\n    cf_password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction ResetPassword() {\r\n    //set state and state\r\n    const [data, setData] = useState(initialState)\r\n\r\n    //get params: id from useParams()\r\n    const { token } = useParams()\r\n\r\n    //assign password and cf_password , err , success = data\r\n    const { password, cf_password, err, success } = data\r\n\r\n    //function to handle change input \r\n    const handleChangeInput = e => {\r\n        const { name, value } = e.target\r\n        setData({ ...data, [name]: value, err: '', success: '' })\r\n    }\r\n\r\n    //function to handle button on click\r\n    const handleResetPass = async () => {\r\n        if (isLength(password))\r\n            return setData({ ...data, err: \"Password must be at least 8 characters.\", success: '' })\r\n\r\n        if (!isMatch(password, cf_password))\r\n            return setData({ ...data, err: \"Password did not match.\", success: '' })\r\n\r\n        try {\r\n            const res = await axios.post('/users/reset', { password }, {\r\n                headers: { Authorization: token }\r\n            })\r\n\r\n            return setData({ ...data, err: \"\", success: res.data.msg })\r\n\r\n        } catch (err) {\r\n            err.response.data.msg && setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div className=\"fg_pass\">\r\n            <h2>Reset Your Password</h2>\r\n\r\n            <div className=\"row\">\r\n                {err && showErrMsg(err)}\r\n                {success && showSuccessMsg(success)}\r\n\r\n                <label htmlFor=\"password\">Password</label>\r\n                <input type=\"password\" name=\"password\" id=\"password\" value={password}\r\n                    onChange={handleChangeInput} />\r\n\r\n                <label htmlFor=\"cf_password\">Confirm Password</label>\r\n                <input type=\"password\" name=\"cf_password\" id=\"cf_password\" value={cf_password}\r\n                    onChange={handleChangeInput} />\r\n\r\n                <button onClick={handleResetPass}>Reset Password</button>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ResetPassword","import ACTIONS from './index'\r\nimport axios from 'axios'\r\n\r\nexport const fetchAllUsers = async (token) => {\r\n    const res = await axios.get('/users/all_infor', {\r\n        headers: { Authorization: token }\r\n    })\r\n    return res\r\n}\r\n\r\nexport const dispatchGetAllUsers = (res) => {\r\n    return {\r\n        type: ACTIONS.GET_ALL_USERS,\r\n        payload: res.data\r\n    }\r\n}","import React, { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport { useSelector, useDispatch } from 'react-redux'\r\nimport { Link } from 'react-router-dom'\r\nimport { isLength, isMatch } from '../../utils/validation/Validation'\r\nimport { showSuccessMsg, showErrMsg } from '../../utils/notification/Notification'\r\nimport { fetchAllUsers, dispatchGetAllUsers } from '../../../redux/actions/usersAction'\r\n\r\nconst initialState = {\r\n    name: '',\r\n    password: '',\r\n    cf_password: '',\r\n    err: '',\r\n    success: ''\r\n}\r\n\r\nfunction Profile() {\r\n    const auth = useSelector(state => state.auth)\r\n    const token = useSelector(state => state.token)\r\n\r\n    const users = useSelector(state => state.users)\r\n\r\n    const { user, isAdmin } = auth\r\n\r\n    const [data, setData] = useState(initialState)\r\n\r\n    const { name, password, cf_password, err, success } = data\r\n\r\n    const [avatar, setAvatar] = useState(false)\r\n    const [loading, setLoading] = useState(false)\r\n    const [callback, setCallback] = useState(false)\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    useEffect(() => {\r\n        if (isAdmin) {\r\n            fetchAllUsers(token).then(res => {\r\n                dispatch(dispatchGetAllUsers(res))\r\n            })\r\n        }\r\n    }, [token, isAdmin, dispatch, callback])\r\n\r\n    const handleChange = e => {\r\n        const { name, value } = e.target\r\n        setData({ ...data, [name]: value, err: '', success: '' })\r\n    }\r\n\r\n    const changeAvatar = async (e) => {\r\n        e.preventDefault()\r\n        try {\r\n            const file = e.target.files[0]\r\n\r\n            if (!file) return setData({ ...data, err: \"No files were uploaded.\", success: '' })\r\n\r\n            if (file.size > 1024 * 1024)\r\n                return setData({ ...data, err: \"Size too large.\", success: '' })\r\n\r\n            if (file.type !== 'image/jpeg' && file.type !== 'image/png')\r\n                return setData({ ...data, err: \"File format is incorrect.\", success: '' })\r\n\r\n            let formData = new FormData()\r\n            formData.append('file', file)\r\n\r\n            setLoading(true)\r\n            const res = await axios.post('/api/upload_avatar', formData, {\r\n                headers: { 'content-type': 'multipart/form-data', Authorization: token }\r\n            })\r\n\r\n            setLoading(false)\r\n            setAvatar(res.data.url)\r\n\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    const updateInfor = () => {\r\n        try {\r\n            axios.patch('/users/update', {\r\n                name: name ? name : user.name,\r\n                avatar: avatar ? avatar : user.avatar\r\n            }, {\r\n                headers: { Authorization: token }\r\n            })\r\n\r\n            setData({ ...data, err: '', success: \"Updated Success!\" })\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    const updatePassword = () => {\r\n        if (isLength(password))\r\n            return setData({ ...data, err: \"Password must be at least 6 characters.\", success: '' })\r\n\r\n        if (!isMatch(password, cf_password))\r\n            return setData({ ...data, err: \"Password did not match.\", success: '' })\r\n\r\n        try {\r\n            axios.post('/users/reset', { password }, {\r\n                headers: { Authorization: token }\r\n            })\r\n\r\n            setData({ ...data, err: '', success: \"Updated Success!\" })\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    const handleUpdate = () => {\r\n        if (name || avatar) updateInfor()\r\n        if (password) updatePassword()\r\n    }\r\n\r\n    const handleDelete = async (id) => {\r\n        try {\r\n            if (user._id !== id) {\r\n                if (window.confirm(\"Are you sure you want to delete this account?\")) {\r\n                    setLoading(true)\r\n                    await axios.delete(`/users/delete/${id}`, {\r\n                        headers: { Authorization: token }\r\n                    })\r\n                    setLoading(false)\r\n                    setCallback(!callback)\r\n                }\r\n            }\r\n\r\n        } catch (err) {\r\n            setData({ ...data, err: err.response.data.msg, success: '' })\r\n        }\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <div>\r\n                {err && showErrMsg(err)}\r\n                {success && showSuccessMsg(success)}\r\n                {loading && <h3>Loading.....</h3>}\r\n            </div>\r\n            <div className=\"profile_page\">\r\n                <div className=\"col-left\">\r\n                    <h2>{isAdmin ? \"Admin Profile\" : \"User Profile\"}</h2>\r\n\r\n                    <div className=\"avatar\">\r\n                        <img src={avatar ? avatar : user.avatar} alt=\"\" />\r\n                        <span>\r\n                            <i className=\"fas fa-camera\"></i>\r\n                            <p>Change</p>\r\n                            <input type=\"file\" name=\"file\" id=\"file_up\" onChange={changeAvatar} />\r\n                        </span>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"name\">Name</label>\r\n                        <input type=\"text\" name=\"name\" id=\"name\" defaultValue={user.name}\r\n                            placeholder=\"Your name\" onChange={handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"email\">Email</label>\r\n                        <input type=\"email\" name=\"email\" id=\"email\" defaultValue={user.email}\r\n                            placeholder=\"Your email address\" disabled />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"password\">New Password</label>\r\n                        <input type=\"password\" name=\"password\" id=\"password\"\r\n                            placeholder=\"Your password\" value={password} onChange={handleChange} />\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label htmlFor=\"cf_password\">Confirm New Password</label>\r\n                        <input type=\"password\" name=\"cf_password\" id=\"cf_password\"\r\n                            placeholder=\"Confirm password\" value={cf_password} onChange={handleChange} />\r\n                    </div>\r\n\r\n                    <div>\r\n                        <em style={{ color: \"crimson\" }}>\r\n                            * If you update your password here, you will not be able\r\n                            to login quickly using google and facebook.\r\n                    </em>\r\n                    </div>\r\n\r\n                    <button disabled={loading} onClick={handleUpdate}>Update</button>\r\n                </div>\r\n\r\n                <div className=\"col-right\">\r\n                    <h2>{isAdmin ? \"Users\" : \"My Orders\"}</h2>\r\n\r\n                    <div style={{ overflowX: \"auto\" }}>\r\n                        <table className=\"customers\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th>ID</th>\r\n                                    <th>Name</th>\r\n                                    <th>Email</th>\r\n                                    <th>Admin</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {\r\n                                    users.map(user => (\r\n                                        <tr key={user._id}>\r\n                                            <td>{user._id}</td>\r\n                                            <td>{user.name}</td>\r\n                                            <td>{user.email}</td>\r\n                                            <td>\r\n                                                {\r\n                                                    user.role === 1\r\n                                                        ? <i className=\"fas fa-check\" title=\"Admin\"></i>\r\n                                                        : <i className=\"fas fa-times\" title=\"User\"></i>\r\n                                                }\r\n                                            </td>\r\n                                            <td>\r\n                                                <Link to={`/edit_user/${user._id}`}>\r\n                                                    <i className=\"fas fa-edit\" title=\"Edit\"></i>\r\n                                                </Link>\r\n                                                <i className=\"fas fa-trash-alt\" title=\"Remove\"\r\n                                                    onClick={() => handleDelete(user._id)} ></i>\r\n                                            </td>\r\n                                        </tr>\r\n                                    ))\r\n                                }\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </>\r\n    )\r\n}\r\n\r\nexport default Profile\r\n","import React, { useState, useEffect } from 'react'\nimport { useParams, useHistory } from 'react-router-dom'\nimport { useSelector } from 'react-redux'\nimport axios from 'axios'\nimport { showSuccessMsg, showErrMsg } from '../../utils/notification/Notification'\n\n\nfunction EditUser() {\n    const { id } = useParams()\n    const history = useHistory()\n    const [editUser, setEditUser] = useState([])\n\n    const users = useSelector(state => state.users)\n    const token = useSelector(state => state.token)\n\n    const [checkAdmin, setCheckAdmin] = useState(false)\n    const [err, setErr] = useState(false)\n    const [success, setSuccess] = useState(false)\n    const [num, setNum] = useState(0)\n\n    useEffect(() => {\n        if (users.length !== 0) {\n            users.forEach(user => {\n                if (user._id === id) {\n                    setEditUser(user)\n                    setCheckAdmin(user.role === 1 ? true : false)\n                }\n            })\n        } else {\n            history.push('/profile')\n        }\n    }, [users, id, history])\n\n    const handleUpdate = async () => {\n        try {\n            if (num % 2 !== 0) {\n                const res = await axios.patch(`/users/update_role/${editUser._id}`, {\n                    role: checkAdmin ? 1 : 0\n                }, {\n                    headers: { Authorization: token }\n                })\n\n                setSuccess(res.data.msg)\n                setNum(0)\n            }\n        } catch (err) {\n            err.response.data.msg && setErr(err.response.data.msg)\n        }\n    }\n\n    const handleCheck = () => {\n        setSuccess('')\n        setErr('')\n        setCheckAdmin(!checkAdmin)\n        setNum(num + 1)\n    }\n\n    return (\n        <div className=\"profile_page edit_user\">\n            <div className=\"row\">\n                <button onClick={() => history.goBack()} className=\"go_back\">\n                    <i className=\"fas fa-long-arrow-alt-left\"></i> Go Back\n                </button>\n            </div>\n\n            <div className=\"col-left\">\n                <h2>Edit User</h2>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"name\">Name</label>\n                    <input type=\"text\" name=\"name\" defaultValue={editUser.name} disabled />\n                </div>\n\n                <div className=\"form-group\">\n                    <label htmlFor=\"email\">Email</label>\n                    <input type=\"email\" name=\"email\" defaultValue={editUser.email} disabled />\n                </div>\n\n                <div className=\"form-group\">\n                    <input type=\"checkbox\" id=\"isAdmin\" checked={checkAdmin}\n                        onChange={handleCheck} />\n                    <label htmlFor=\"isAdmin\">isAdmin</label>\n                </div>\n\n                <button onClick={handleUpdate}>Update</button>\n\n                {err && showErrMsg(err)}\n                {success && showSuccessMsg(success)}\n            </div>\n        </div>\n    )\n}\n\nexport default EditUser\n","import React from 'react'\nimport './home.css'\n\nfunction Home() {\n    return (\n        <div className=\"home_page\">\n            <h2>Hello everyone!</h2>\n            <p>\n                This site is about user authentication, \n                so there won't be any other pages here. \n                If people want to see more about how to \n                create other websites. You can click on \n                the link below, visit my youtube channel. \n                And if you find it useful, please subscribe \n                for us. Thank you very much!\n            </p>\n            <a href=\"https://www.youtube.com/c/DevATHTML\" target=\"_blank\" \n            rel=\"noopener noreferrer\">My Youtube</a>\n\n            <h3>Build a simple e-commerce site.</h3>\n\n            <a href=\"https://youtu.be/uXl77UFkrkQ\" target=\"_blank\" \n            rel=\"noopener noreferrer\">Build a Ecommerce</a>\n        </div>\n    )\n}\n\nexport default Home\n","import React from 'react'\r\nimport { Switch, Route } from 'react-router-dom'\r\nimport Login from './auth/Login'\r\nimport Register from './auth/Register'\r\nimport ActivationEmail from './auth/ActivationEmail'\r\nimport { useSelector } from 'react-redux'\r\nimport NotFound from '../utils/NotFound/NotFound'\r\nimport ForgotPassword from './auth/ForgotPassword'\r\nimport ResetPassword from './auth/ResetPassword'\r\nimport Profile from '../body/profile/Profile'\r\nimport EditUser from '../body/profile/EditUser'\r\nimport Home from '../body/home/Home'\r\n\r\nfunction Body() {\r\n\r\n    //get auth from state.auth\r\n    const auth = useSelector(state => state.auth)\r\n\r\n    //get isLogged from auth\r\n    const { isLogged, isAdmin } = auth\r\n\r\n    return (\r\n        <section>\r\n            <Switch>\r\n                <Route path=\"/\" component={Home} exact />\r\n                <Route path=\"/login\" component={isLogged ? NotFound : Login} exact />\r\n                <Route path=\"/register\" component={isLogged ? NotFound : Register} exact />\r\n\r\n                <Route path=\"/forgot_password\" component={isLogged ? NotFound : ForgotPassword} exact />\r\n\r\n                <Route path=\"/users/reset/:token\" component={isLogged ? NotFound : ResetPassword} exact />\r\n\r\n                <Route path=\"/profile\" component={isLogged ? Profile : NotFound} exact />\r\n\r\n                <Route path=\"/user/activate/:activation_token\" component={ActivationEmail} exact />\r\n\r\n                <Route path=\"/edit_user/:id\" component={isAdmin ? EditUser : NotFound} exact />\r\n            </Switch>\r\n        </section>\r\n    )\r\n}\r\n\r\nexport default Body","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router } from 'react-router-dom'\nimport Header from './components/header/Header'\nimport Body from './components/body/Body'\nimport { useDispatch, useSelector } from 'react-redux'\nimport axios from 'axios';\nimport { dispatchLogin, dispatchGetUser, fetchUser } from './redux/actions/authAction'\n\nfunction App() {\n  const dispatch = useDispatch()\n\n  //get token from state.token\n  const token = useSelector(state => state.token)\n\n  //get auth from state.auth \n  const auth = useSelector(state => state.auth)\n\n  //useEffect to send request to server to refresh token\n  useEffect(() => {\n    //get firstLogin boolen from localStorage.getItem\n    const firstLogin = localStorage.getItem('firstLogin')\n\n    if (firstLogin) {\n      //function to send request to server to refresh token \n      const getToken = async () => {\n        const res = await axios.post('/users/refresh_token', null)\n\n        //use dispatch to call action\n        dispatch({ type: 'GET_TOKEN', payload: res.data.access_Token })\n      }\n      getToken()\n    }\n  }, [auth.isLogged, dispatch])\n\n  //useEffect to get user once token change\n  useEffect(() => {\n    if (token) {\n      const getUser = () => {\n        dispatch(dispatchLogin())\n        return fetchUser(token).then(res => {\n          dispatch(dispatchGetUser(res))\n        })\n      }\n      getUser()\n    }\n  }, [token, dispatch])\n\n  return (\n    <Router>\n      <div className=\"App\">\n        <Header />\n        <Body />\n      </div>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import ACTIONS from '../actions/'\r\n\r\nconst initialState = {\r\n    user: [],\r\n    isLogged: false,\r\n    isAdmin: false\r\n}\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.LOGIN:\r\n            return {\r\n                ...state,\r\n                isLogged: true\r\n            }\r\n        case ACTIONS.GET_USER:\r\n            return {\r\n                ...state,\r\n                user: action.payload.user,\r\n                isAdmin: action.payload.isAdmin\r\n            }\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default authReducer","import ACTIONS from '../actions/'\r\n\r\nconst token = ''\r\n\r\nconst tokenReducer = (state = token, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.GET_TOKEN:\r\n            return action.payload\r\n        default:\r\n            return state\r\n\r\n    }\r\n}\r\n\r\nexport default tokenReducer","import ACTIONS from '../actions'\r\n\r\nconst users = []\r\n\r\nconst usersReducer = (state = users, action) => {\r\n    switch (action.type) {\r\n        case ACTIONS.GET_ALL_USERS:\r\n            return action.payload\r\n        default:\r\n            return state\r\n    }\r\n}\r\n\r\nexport default usersReducer","import { combineReducers } from 'redux'\r\nimport auth from './authReducer'\r\nimport token from './tokenReducer'\r\nimport users from './usersReducer'\r\n\r\nexport default combineReducers({\r\n    auth,\r\n    token,\r\n    users\r\n})","import React from 'react'\r\nimport { createStore } from 'redux'\r\nimport rootReducer from './reducers/'\r\nimport { Provider } from 'react-redux'\r\n\r\nconst store = createStore(rootReducer,\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n\r\nfunction DataProvider({ children }) {\r\n    return (\r\n        <Provider store={store}>\r\n            { children}\r\n        </Provider>\r\n    )\r\n}\r\n\r\nexport default DataProvider","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport DataProvider from './redux/store'\n\nReactDOM.render(\n  <React.StrictMode>\n    <DataProvider>\n      <App />\n    </DataProvider>\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}